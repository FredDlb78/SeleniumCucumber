name: Run Cucumber Tests

on:
  schedule:
    - cron: '40 21 1 * *'
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Prepare reports directory
        run: mkdir -p target/cucumber-reports

      - name: Run Tests with Reports Generation
        run: |
          mvn test -Dcucumber.plugin="html:target/cucumber-reports/cucumber.html, json:target/cucumber-reports/cucumber.json"
          # Fallback if HTML report not generated
          if [ ! -f "target/cucumber-reports/cucumber.html" ]; then
            echo "⚠️ HTML report not generated, trying alternative approach..."
            mvn test -Dcucumber.plugin="html:target/cucumber-reports/cucumber.html"
          fi

      - name: Verify Reports
        run: |
          echo "Generated reports:"
          ls -la target/cucumber-reports/
          # Fail if no HTML report
          if [ ! -f "target/cucumber-reports/cucumber.html" ]; then
            echo "❌ Error: HTML report not found!"
            exit 1
          fi

      - name: Upload HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: cucumber-html-report
          path: target/cucumber-reports/cucumber.html
          if-no-files-found: error

      - name: Upload JSON Report
        if: contains(steps.Verify_Reports.outcome, 'success')
        uses: actions/upload-artifact@v4
        with:
          name: cucumber-json-report
          path: target/cucumber-reports/cucumber.json
          if-no-files-found: warn

      - name: Send Slack Notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          # Prepare message
          REPORT_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          MESSAGE="Tests Cucumber terminés (Run: ${{ github.run_id }})\n"
          MESSAGE+="Rapport disponible: $REPORT_URL"
          
          # Add warning if JSON missing
          if [ ! -f "target/cucumber-reports/cucumber.json" ]; then
            MESSAGE+="\n⚠️ Rapport JSON non généré"
          fi
          
          # Send to Slack
          curl -s -X POST \
            -H "Content-type: application/x-www-form-urlencoded" \
            --data-urlencode "payload={\"text\":\"$MESSAGE\"}" \
            "$SLACK_WEBHOOK_URL" || echo "⚠️ Notification Slack non envoyée"